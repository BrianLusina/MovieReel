apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "kotlin-android-extensions"
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'kotlin-kapt'

android {
    def globalConfig = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfig["androidCompileSdkVersion"]

    defaultConfig {
        minSdkVersion globalConfig["androidMinSdkVersion"]
        targetSdkVersion globalConfig["androidTargetSdkVersion"]

        // used by Room, to test migrations
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    dexOptions {
        preDexLibraries = false
        dexInProcess = false
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'              //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }

    buildTypes {
        release {
            postprocessing {
                removeUnusedCode true
                obfuscate true
                optimizeCode true
                proguardFile 'proguard-rules.pro'
            }
        }
    }

    sourceSets {
        main{
            java.srcDirs += "src/main/kotlin"
        }

        androidTest {
            java.srcDirs += "src/androidTest/kotlin"
            assets.srcDirs += files("$projectDir/schemas".toString())
        }

        test{
            java.srcDirs += "src/test/kotlin"
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    def cacheDependencies = rootProject.ext.cacheDependencies
    def cacheTestDependencies = rootProject.ext.cacheTestDependencies
    def globalDependencies = rootProject.ext.globalDependencies
    def testDependencies = rootProject.ext.testDependencies

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    compileOnly globalDependencies.javaxAnnotation

    implementation project(':data')

    implementation globalDependencies.kotlin
    implementation globalDependencies.javaxInject
    implementation globalDependencies.rxKotlin
    implementation globalDependencies.gson

    implementation cacheDependencies.roomRxJava

    api cacheDependencies.roomRuntime
    kapt cacheDependencies.roomCompiler

    debugImplementation cacheDependencies.debugDb

    testImplementation testDependencies.junit
    testImplementation testDependencies.kotlinJUnit
    testImplementation testDependencies.mockitoKotlin
    testImplementation testDependencies.assertJ
    testImplementation testDependencies.robolectric
    testImplementation cacheTestDependencies.roomTest

    androidTestImplementation cacheTestDependencies.roomTest
    androidTestImplementation testDependencies.supportTestRunner
}
